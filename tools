#! /usr/bin/env bash

#############################################################################
# Software Install - Mac Poo
#############################################################################
brew_install () {
  BREW_CMD="$(which brew)"
  if [ ! -f "${BREW_CMD}" ]; then
    echo Brew not found
    return
  fi

  BREW_CMD="$1"
  which "${BREW_CMD}" > /dev/null
  if [ $? -gt 0 ]; then
    brew install "${BREW_CMD}"
  fi
}

if echo $OSTYPE | grep -i darwin > /dev/null; then
  # List of the things
  brew_install bat
  brew_install diff-so-fancy
  # Aliases based on successes
fi

#############################################################################
# Software Install - Linux Poo
#############################################################################

apt_get_install () {
  APP="$(basename $1)"
  [ -z "$2" ] || APP="$2"
  if ! which "$APP" > /dev/null; then
    [ -z "${RUN_ONCE}" ] && sudo apt-get update -y && RUN_ONCE=true
    sudo apt-get install -y $APP
  fi
}

npm_install () {
  APP="$(basename $1)"
  [ -z "$2" ] || APP="$2"
  if ! which "${APP}" > /dev/null; then
    sudo mkdir -p /usr/lib/node_modules
    sudo mkdir -p /usr/local/lib
    sudo chown -R "${USER}:${USER}" /usr/lib/node_modules
    sudo chown -R "${USER}:${USER}" /usr/local/lib
    sudo chown "root:adm" /usr/bin
    sudo chmod 775 /usr/bin
    sudo chown "root:adm" /usr/local/bin
    sudo chmod 775 /usr/local/bin
    npm install -g "$1"
  fi
}

if echo $OSTYPE | grep -i linux > /dev/null; then
  apt_get_install nodejs node
  apt_get_install npm
  apt_get_install curl
  apt_get_install wget
  apt_get_install tmux
  apt_get_install openvpn
  apt_get_install traceroute
  apt_get_install strace
  apt_get_install jq
  npm_install "glg-core/vpn-client"
  npm_install "git-clone-cli" "clone"

  if ! which bat > /dev/null; then
    pushd /tmp > /dev/null
    URL='https://github.com/sharkdp/bat/releases/download/v0.7.1/bat-musl_0.7.1_amd64.deb'
    wget "${URL}"
    sudo dpkg -i "$(basename ${URL})"
    popd >/dev/null
  fi

  if [ ! -L "${HOME}/.zshrc" ] \
  && [ -f "${HOME}/Dropbox/syncstuff/.zshrc" ]; then
    mv "${HOME}/.zshrc" "${HOME}/.zshrc.bak"
    ln -s "${HOME}/Dropbox/syncstuff/.zshrc" "${HOME}/.zshrc"
  fi

  if [ ! -L "/usr/bin/open" ] \
  && [ -f "${HOME}/Dropbox/syncstuff/open" ]; then
    sudo mv "/usr/bin/open" "/usr/bin/open.bak"
    sudo ln -s "${HOME}/Dropbox/syncstuff/open" "/usr/bin/open"
  fi

  if [ -f "${HOME}/.oh-my-zsh/themes/agnoster.zsh-theme" ] \
  && ! grep prompt_context "${HOME}/.oh-my-zsh/themes/agnoster.zsh-theme" | grep -v '{' | grep '#' > /dev/null; then
    sed -i 's|prompt_context$|# prompt_context$|' "${HOME}/.oh-my-zsh/themes/agnoster.zsh-theme"
  fi

  if [ ! -L "${HOME}/.ssh" ] \
  && [ -d "${HOME}/Dropbox/syncstuff/.ssh" ]; then
    mv "${HOME}/.ssh" "${HOME}/.ssh.bak"
    ln -s "${HOME}/Dropbox/syncstuff/.ssh" "${HOME}/.ssh"
    for file in $(echo id_rsa \
                       id_dsa \
                       glguser \
                       beta_bot); do
      pushd "${HOME}/.ssh" > /dev/null
      chmod 400 "${file}"
      popd > /dev/null
    done
  fi

  if ! which kitty > /dev/null; then
    pushd /tmp > /dev/null
    apt_get_install libjs-underscore
    apt_get_install libjs-sphinxdoc
    for url in $(echo 'http://http.us.debian.org/debian/pool/main/k/kitty/kitty-terminfo_0.11.3-1_all.deb' \
                      'http://http.us.debian.org/debian/pool/main/k/kitty/kitty-doc_0.11.3-1_all.deb' \
                      'http://http.us.debian.org/debian/pool/main/k/kitty/kitty_0.11.3-1_amd64.deb'); do

      wget "$url"
      sudo dpkg -i "$(basename ${url})"
    done
    popd
  fi

  if [ ! -L "${HOME}/.config/kitty/kitty.conf" ] \
  && [ -f "${HOME}/Dropbox/syncstuff/.config/kitty/kitty.conf" ]; then
    mv "${HOME}/.config/kitty/kitty.conf" "${HOME}/.config/kitty/kitty.conf.bak"
    ln -s "${HOME}/Dropbox/syncstuff/.config/kitty/kitty.conf" "${HOME}/.config/kitty/kitty.conf"
  fi

fi

#############################################################################
# Global Configs
#############################################################################

# If bat successfully gets installed we will
# swap cat with bat
if which bat > /dev/null; then
  alias cat='bat'
fi

if which diff-so-fancy > /dev/null; then
  git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"
  git config --global color.ui true
  git config --global color.diff-highlight.oldNormal    "red bold"
  git config --global color.diff-highlight.oldHighlight "red bold 52"
  git config --global color.diff-highlight.newNormal    "green bold"
  git config --global color.diff-highlight.newHighlight "green bold 22"

  git config --global color.diff.meta       "yellow"
  git config --global color.diff.frag       "magenta bold"
  git config --global color.diff.commit     "yellow bold"
  git config --global color.diff.old        "red bold"
  git config --global color.diff.new        "green bold"
  git config --global color.diff.whitespace "red reverse"
fi

# Install prettyping
if [ ! -f /usr/local/bin/prettyping ]; then
  pushd /tmp > /dev/null
  curl -s -O https://raw.githubusercontent.com/denilsonsa/prettyping/master/prettyping
  sudo cp prettyping /usr/local/bin
  echo Installing prettyping
  sudo chmod +x /usr/local/bin/prettyping
  popd > /dev/null
fi

if [ -f /usr/local/bin/prettyping ]; then
  alias ping='prettyping --nolegend'
fi
