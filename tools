#! /usr/bin/env bash

if echo $OSTYPE | grep -i linux > /dev/null; then
  apt_get_install apt-utils apt-extracttemplates
  apt_get_install nodejs node
  apt_get_install locales update-locale
  apt_get_install npm
  apt_get_install git
  apt_get_install curl
  apt_get_install wget
  apt_get_install tmux
  apt_get_install openvpn
  apt_get_install traceroute
  apt_get_install strace
  apt_get_install jq
  apt_get_install silversearcher-ag ag
  # Needed for coc-lua lsp server vim plugin
  # Link: https://stackoverflow.com/questions/20079572/srlua-makefile-error-lua-h-no-such-file-or-directory/20080097
  apt_get_install "lua5.3" lua
  apt_get_install "liblua5.3-dev" lua

  # These two collide right now so this is temporary.  See issue below
  # apt_get_install bat batcat
  # apt_get_install ripgrep rg
  # Fixing Bug: https://github.com/sharkdp/bat/issues/938#issuecomment-646745610
  if ! _which batcat \
  || ! _which rg; then
    eval "$SUDO apt-get install -o Dpkg::Options::='--force-overwrite' -y bat ripgrep"
  fi

  if type rg &> /dev/null; then
    export FZF_DEFAULT_COMMAND='rg --files'
    export FZF_DEFAULT_OPTS='-m --height 50% --border'
  fi

  if ! _which fzf \
  && [ ! -d "$HOME/.fzf" ]; then
    git clone --depth 1 "https://github.com/junegunn/fzf.git" "$HOME/.fzf"
    pushd "$HOME/.fzf" > /dev/null
    "$HOME/.fzf/install" --key-bindings --completion --update-rc
    popd > /dev/null
  fi

  export GITHUB_ORGS=${GITHUB_ORGS:-"glg,glg-core,custom-elements,igroff,wballard,bhudgens"}
  npm_install "git-clone-cli" "clone"

  if [ ! -f "$HOME/.local/kitty.app/bin/kitty" ]; then
    pushd /tmp > /dev/null
    apt_get_install libjs-underscore
    apt_get_install libjs-sphinxdoc
    curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
    popd
  fi

  if [ ! -L "${HOME}/.config/kitty/kitty.conf" ] \
  && [ -f "${HOME}/.dotfiles/kitty.conf" ]; then
    mkdir -p $(dirname "${HOME}/.config/kitty/kitty.conf")
    [ -f "${HOME}/.config/kitty/kitty.conf" ] && mv "${HOME}/.config/kitty/kitty.conf" "${HOME}/.config/kitty/kitty.conf.bak"
    ln -s "${HOME}/.dotfiles/kitty.conf" "${HOME}/.config/kitty/kitty.conf"
  fi

  if ! _which docker; then
    bash -c "$(curl -sLo- 'https://get.docker.com')"
    eval "$SUDO usermod -aG docker '$USER'"
  fi

  if ! _which docker-compose; then
    eval "$SUDO curl -L 'https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)' -o '/usr/local/bin/docker-compose'"
    eval "$SUDO chmod +x '/usr/local/bin/docker-compose'"
  fi

  # Let's me clean up markdown
  npm_install "bhudgens/tidy-markdown" "tidy-markdown"
fi

if ! _which lpass; then
  apt_get_install bash-completion
  apt_get_install build-essential
  apt_get_install cmake
  apt_get_install git
  apt_get_install libcurl4
  apt_get_install libcurl4-openssl-dev
  apt_get_install libssl-dev
  apt_get_install libxml2
  apt_get_install libxml2-dev
  apt_get_install libssl1.1
  apt_get_install pkg-config
  apt_get_install ca-certificates
  apt_get_install xclip

  TMP_LPASS_INSTALL_DIR="/tmp/lastpass-cli"
  mkdir -p "${TMP_LPASS_INSTALL_DIR}"
  git clone "https://github.com/lastpass/lastpass-cli.git" "${TMP_LPASS_INSTALL_DIR}"
  pushd "${TMP_LPASS_INSTALL_DIR}" > /dev/null
    make
    eval "$SUDO make install"
  popd > /dev/null
fi

# When installing modules with npm always pin version
npm config set save-prefix ''

#############################################################################
# Global Configs
#############################################################################
# If bat successfully gets installed we will
# swap cat with bat
if _which batcat; then
  alias cat='batcat'
fi

# Install prettyping
if ! _which prettyping; then
  pushd /tmp > /dev/null
  curl -s -O https://raw.githubusercontent.com/denilsonsa/prettyping/master/prettyping
  eval "$SUDO cp prettyping /usr/local/bin"
  echo Installing prettyping
  eval "$SUDO chmod +x /usr/local/bin/prettyping"
  popd > /dev/null
fi

if [ -f /usr/local/bin/prettyping ]; then
  alias ping='prettyping --nolegend'
fi

if _which locale-gen \
&& ! grep 'en_US.UTF-8' /etc/default/locale > /dev/null; 
then
  eval "$SUDO locale-gen 'en_US.UTF-8'"
  eval "$SUDO update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8"
fi

if [ ! -f "$HOME/.gitconfig" ]; then
  git config --global user.email "benjamin@benjamindavid.com"
  git config --global user.name "Benjamin Hudgens"
fi

