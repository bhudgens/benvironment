#! /usr/bin/env bash

## Admin Tools for our internal deployment system

# function _getGDSClusterConfigsAndServices() {
  # _pushd "$GDS_REPO_DIR"
  # egrep '\[Link\]' ./clusterconfigs/* \
    # | perl -pe 's/.*\/(.*?):\|\s+\[(.*?)\]\((.*?)\).*?\((.*?)\).*?\((.*?)\).*?\((.*?)\).*?\((.*?)\).*?\((.*?)\).*/$1 $2 $3 $4 $5 $6 $7 $8/'
# }

# function _getAWSInfraDeployedVersions() {
  # _pushd "$AWS_REPO_DIR"
  # ls \
    # | egrep -E '^v[0-9]{1,2}-[spij]{1}[0-9]{2}.glgresearch.com' \
    # | perl -pe 's|(v\d{1,2}-[ispj]\d{0,2}).glgresearch.com|$1|'
# }

export GDS_HELPER_CACHE_DIR=${GDS_HELPER_CACHE_DIR:-"$HOME/run"}
export GDS_CODEPIPELINES_CACHE="$GDS_HELPER_CACHE_DIR/.codepipelines"

function _updateCodePipelineCache() {
  aws --region us-east-1 codepipeline list-pipelines > "$GDS_CODEPIPELINES_CACHE.tmp"
  mv "$GDS_CODEPIPELINES_CACHE.tmp" "$GDS_CODEPIPELINES_CACHE"
}

function _getCodePipelines() {
  [ ! -f "$GDS_CODEPIPELINES_CACHE" ] && _updateCodePipelineCache
  jq -r '.[][].name' "$GDS_CODEPIPELINES_CACHE"
}

#####################################################################################
# Function: rc (run codepipeline)
#
# Searchable list of services used to run the 'release change' on the codepipeline
#####################################################################################
function rc() {
  local search="$1"

  IFS=$'\n'
  local table=$(echo "Codepipelines:"$'\n'"$(_getCodePipelines)")
  for pipeline in $(echo "$table" | fzf --layout=reverse --header-lines=1 ${search:+"-q $search"}); do
    aws --region us-east-1 codepipeline start-pipeline-execution --name "$pipeline" > /dev/null \
      && echo -e "${green}Starting: ${pipeline}${end}" \
      || echo -e "${red}Failed: ${pipeline}${end}"
  done
  _updateCodePipelineCache
}

